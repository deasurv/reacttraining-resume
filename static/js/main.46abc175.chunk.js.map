{"version":3,"sources":["sections/NavSection.js","components/FullScreenPage.js","components/FASocialIcons.js","components/ScrollDown.js","sections/TitleSection.js","sections/AboutSection.js","components/SkillCard.js","components/ScrollToTop.js","sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["NavSection","react_default","a","createElement","className","onMouseUp","this","props","colorize","id","modules","activeClass","to","spy","smooth","duration","onSetActive","handleSetActive","Component","FullScreenPage","children","concat","library","add","fab","FASocialIcons","href","link","icon","index_es","ScrollDown","TitleSection","FullScreenPage_FullScreenPage","name","data","title","subtitle","Object","keys","links","map","key","FASocialIcons_FASocialIcons","ScrollDown_ScrollDown","AboutSection","sections","items","item","content","SkillCard","skill","src","image","ScrollToTop","SkillSection","SkillCard_SkillCard","ScrollToTop_ScrollToTop","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","backgroundColor","state","color","style","NavSection_NavSection","TitleSection_TitleSection","AboutSection_AboutSection","SkillSection_SkillSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.46abc175.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-scroll';\r\n\r\nimport './NavSection.css';\r\n\r\nexport default class NavSection extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <div className={'change-color'} onMouseUp={this.props.colorize}>\r\n                    <i className=\"fas fa-palette\"></i>\r\n                    <span>Colorize!</span>\r\n                </div>\r\n                <div id={'menu'}>\r\n                    <div className={'sub-menu'}>\r\n                        <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} duration={500} onSetActive={this.handleSetActive}>\r\n                            About\r\n                        </Link>\r\n                    </div>\r\n                    <div className={'sub-menu'}>\r\n                        <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true} duration={500} onSetActive={this.handleSetActive}>\r\n                            Portfolio\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './FullPageScreen.css'\r\n\r\nexport default class FullScreenPage extends Component{\r\n\r\n    render(){\r\n        const {children} = this.props;\r\n        return (\r\n            <div className={`full-screen-page ${this.props.className || ''}`}>\r\n                {children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react'\r\nimport './FASocialIcons.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\n\r\nlibrary.add(fab);\r\n\r\nexport default class FASocialIcons extends Component{\r\n    render(){\r\n        return(\r\n            <a href={this.props.link} className={`fa-social-icons ${this.props.icon || ''}`}>\r\n                <FontAwesomeIcon icon={['fab',this.props.icon]}/>\r\n            </a>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport {Link} from 'react-scroll';\r\n\r\nimport './ScrollDown.css';\r\n\r\nexport default class ScrollDown extends Component{\r\n    render(){\r\n        return(\r\n            <div className={'scroll-down bounce'}>\r\n                <Link activeClass=\"active\" to={this.props.to} spy={true} smooth={true} duration={500} onSetActive={this.handleSetActive}>\r\n                    <span>Click Me!</span>\r\n                    <i className=\"fas fa-chevron-down\"></i>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport FullScreenPage from '../components/FullScreenPage';\r\nimport FASocialIcons from \"../components/FASocialIcons\";\r\nimport ScrollDown from \"../components/ScrollDown\";\r\n\r\nimport data from \"../data\";\r\nimport './TitleSection.css'\r\n\r\nexport default class TitleSection extends Component{\r\n\r\n    render(){\r\n        return(\r\n            <FullScreenPage name=\"first\" className={'first'}>\r\n                <h1 className={'title'}>{data.title}</h1>\r\n                <h3 className={'subtitle'}>{data.subtitle}</h3>\r\n                <div>\r\n                    {Object.keys(data.links).map(key => {\r\n                        return(\r\n                            <FASocialIcons icon={key} link={data.links[key]}/>\r\n                        );\r\n                    })}\r\n                </div>\r\n                <ScrollDown to={'about'}/>\r\n            </FullScreenPage>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport FullScreenPage from '../components/FullScreenPage';\r\nimport {Element} from 'react-scroll';\r\n\r\nimport data from \"../data\";\r\nimport './AboutSection.css';\r\nimport ScrollDown from \"../components/ScrollDown\";\r\n\r\nexport default class AboutSection extends Component {\r\n    render() {\r\n        return (\r\n            <Element name=\"about\" className=\"element\">\r\n                <FullScreenPage className={'second'}>\r\n                    <h2 className={'title'}>{data.sections[0].title}</h2>\r\n                    <div>\r\n                        {data.sections[0].items.map(item => {\r\n                            return <p>{item.content}</p>\r\n                        })}\r\n                    </div>\r\n                    <ScrollDown to={'skills'}/>\r\n                </FullScreenPage>\r\n            </Element>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './SkillCard.css';\r\n\r\nexport default class SkillCard extends Component {\r\n    render() {\r\n        const {skill} = this.props;\r\n\r\n        return (\r\n            <div className={'card-parent'}>\r\n                <div className={'card'}>\r\n                    <div className={'image-wrapper'}>\r\n                        <img src={skill.content.image}/>\r\n                    </div>\r\n                    <div className={'content-wrapper'}>\r\n                        <h3>{skill.content.title}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nimport {Link} from 'react-scroll';\r\n\r\nimport './ScrollDown.css';\r\n\r\nexport default class ScrollToTop extends Component{\r\n    render(){\r\n        return(\r\n            <div className={'scroll-down bounce'}>\r\n                <Link activeClass=\"active\" to={this.props.to} spy={true} smooth={true} duration={500} onSetActive={this.handleSetActive}>\r\n                    <span>To Top</span>\r\n                    <i className=\"fas fa-chevron-up\"></i>\r\n                </Link>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport FullScreenPage from '../components/FullScreenPage';\r\nimport SkillCard from '../components/SkillCard'\r\nimport {Element, Link} from 'react-scroll';\r\nimport '../components/ScrollToTop';\r\n\r\nimport data from \"../data\";\r\nimport './SkillSection.css';\r\nimport ScrollToTop from \"../components/ScrollToTop\";\r\n\r\nexport default class SkillSection extends Component {\r\n    render() {\r\n        return (\r\n            <Element name=\"skills\" className=\"element\">\r\n                <FullScreenPage className={'third'}>\r\n                    <h2 className={'title'}>{data.sections[1].title}</h2>\r\n                    <div className={'card-container'}>\r\n                        {data.sections[1].items.map(skill => {\r\n                            return (\r\n                                <SkillCard skill={skill}/>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                    <ScrollToTop to={'first'}/>\r\n                </FullScreenPage>\r\n            </Element>\r\n        );\r\n    }\r\n}","import React, {Component} from 'react';\n\nimport NavSection from \"./sections/NavSection\";\nimport TitleSection from \"./sections/TitleSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\n\nimport './App.css';\n\n\nclass App extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            backgroundColor : '255, 255, 255',\n            color: '#000'\n        };\n    }\n\n    colorize = () => {\n        this.setState({\n            backgroundColor: this.state.backgroundColor == '255, 255, 255' ? '44, 62, 80' : '255, 255, 255',\n            color:  this.state.color == '#000' ? '#fff' : '#000',\n        });\n    };\n\n    render() {\n        return (\n            <div className=\"App\" style={{color: this.state.color, backgroundColor: `rgb(${this.state.backgroundColor})`}}>\n                <NavSection colorize={this.colorize}/>\n                <TitleSection/>\n                <AboutSection/>\n                <SkillSection/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}